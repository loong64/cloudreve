on:
  push:
    branches:
      - master
  schedule:
    - cron: '0 1 * * *'
  workflow_dispatch:

name: Checkout and Create Release Version

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version.outputs.version }}
      build: ${{ steps.check-build.outputs.build }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check Version
        id: get-version
        run: |
          version=$(curl -s 'https://api.github.com/repos/cloudreve/cloudreve/releases/latest' | jq -r ".tag_name")
          echo "Current Version: ${version}"
          if [ -z "${version}" ] || [ "${version}" == "null" ]; then
            echo "Failed to get version"
            exit 1
          fi
          echo "version=${version}" >> $GITHUB_ENV
          echo "version=${version}" >> $GITHUB_OUTPUT

      - name: Check Build
        id: check-build
        run: |
          gh release view ${version} -R ${{ github.repository }} | grep cloudreve_${version}_linux_loong64.tar.gz >/dev/null 2>&1 || echo "build=1" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    needs: check
    runs-on: ubuntu-latest
    if: needs.check.outputs.build == 1
    env:
      version: ${{ needs.check.outputs.version }}
    steps:
      - name: Check Version
        id: get-version
        run: |
          echo "Current Version: ${version}"

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          repository: cloudreve/cloudreve
          ref: ${{ env.version }}
          submodules: true

      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            ~/.cache
            ~/go/pkg/mod
          key: ${{ runner.os }}-cloudreve-${{ env.version }}-${{ github.sha }}
          restore-keys: ${{ runner.os }}-cloudreve-

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'

      - name: Get File
        run: |
          wget -O ../goreleaser.test https://github.com/${{ github.repository }}/raw/refs/heads/master/.goreleaser.yaml

      - name: Build Binary
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: '~> v2'
          args: release --config ../goreleaser.test --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Dockerfile
        run: |
          mkdir -p .build
          wget -qO Dockerfile https://github.com/${{ github.repository }}/raw/refs/heads/master/Dockerfile
          wget -qO .build/entrypoint.sh https://github.com/cloudreve/cloudreve/raw/refs/heads/master/.build/entrypoint.sh
          wget -qO .build/aria2.supervisor.conf https://github.com/cloudreve/cloudreve/raw/refs/heads/master/.build/aria2.supervisor.conf 
          sudo chmod +x .build/entrypoint.sh
        working-directory: dist/cloudreve_linux_loong64

      - name: Build and push image
        uses: docker/build-push-action@v4
        with:
          context: dist/cloudreve_linux_loong64/
          platforms: linux/loong64
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/cloudreve/cloudreve:latest
            ghcr.io/${{ github.repository_owner }}/cloudreve/cloudreve:${{ needs.check.outputs.version }}
          outputs: type=image,oci-mediatypes=true,compression=zstd,compression-level=3,force-compression=true
          cache-from: type=gha
          cache-to: type=gha,mode=max

